[
    {
        "library":"numpy",
        "library_title":"maths",
        "function":"add",
        "block_name":"NumpyAdd",
        "op_block_string":"OP_NODE_NUMPY_ADD",
        "operation_title":"Addition",
        "operation_symbol":"+",
        "icon_filename":"plus_math_100",
        "input_socket_types":"(Number,Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"maths",
        "function":"subtract",
        "block_name":"NumpySubtract",
        "op_block_string":"OP_NODE_NUMPY_SUBTRACT",
        "operation_title":"Subtraction",
        "operation_symbol":"-",
        "icon_filename":"subtract_100",
        "input_socket_types":"(Number,Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"maths",
        "function":"multiply",
        "block_name":"NumpyMultiply",
        "op_block_string":"OP_NODE_NUMPY_MULTIPLY",
        "operation_title":"Multiplication",
        "operation_symbol":"*",
        "icon_filename":"multiply_100",
        "input_socket_types":"(Number,Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"maths",
        "function":"true_divide",
        "block_name":"NumpyTrueDivide",
        "op_block_string":"OP_NODE_NUMPY_DIVIDE",
        "operation_title":"Division",
        "operation_symbol":"\/",
        "icon_filename":"divide_100",
        "input_socket_types":"(Number,Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"maths",
        "function":"mod",
        "block_name":"NumpyNumpyMod",
        "op_block_string":"OP_NODE_NUMPY_MODULO",
        "operation_title":"Modulo",
        "operation_symbol":"%",
        "icon_filename":"percentage_100",
        "input_socket_types":"(Number,Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"maths",
        "function":"power",
        "block_name":"NumpyPower",
        "op_block_string":"OP_NODE_NUMPY_POWER",
        "operation_title":"Power",
        "operation_symbol":"**",
        "icon_filename":"square_number_100",
        "input_socket_types":"(Number,Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"logics",
        "function":"less",
        "block_name":"NumpyLessThan",
        "op_block_string":"OP_NODE_NUMPY_LESS",
        "operation_title":"Less",
        "operation_symbol":"<",
        "icon_filename":"less_than_100",
        "input_socket_types":"(Number,Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"logics",
        "function":"less_equal",
        "block_name":"NumpyLessEqual",
        "op_block_string":"OP_NODE_NUMPY_LESS_EQUAL",
        "operation_title":"Less or equal",
        "operation_symbol":"<=",
        "icon_filename":"less_or_equal_100",
        "input_socket_types":"(Number,Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"logics",
        "function":"equal",
        "block_name":"NumpyEqual",
        "op_block_string":"OP_NODE_NUMPY_EQUAL",
        "operation_title":"Equal",
        "operation_symbol":"==",
        "icon_filename":"equal_sign_100",
        "input_socket_types":"(Number,Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"logics",
        "function":"not_equal",
        "block_name":"NumpyNotEqual",
        "op_block_string":"OP_NODE_NUMPY_NOT_EQUAL",
        "operation_title":"Not equal",
        "operation_symbol":"==",
        "icon_filename":"not_equal_sign_100",
        "input_socket_types":"(Number,Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"logics",
        "function":"greater",
        "block_name":"NumpyGreater",
        "op_block_string":"OP_NODE_NUMPY_GREATER",
        "operation_title":"Greater",
        "operation_symbol":">",
        "icon_filename":"more_than_100",
        "input_socket_types":"(Number,Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"logics",
        "function":"greater_equal",
        "block_name":"NumpyGreaterEqual",
        "op_block_string":"OP_NODE_NUMPY_GREATER_EQUAL",
        "operation_title":"Greater or equal",
        "operation_symbol":">=",
        "icon_filename":"more_or_equal_100",
        "input_socket_types":"(Number,Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"logics",
        "function":"isclose",
        "block_name":"NumpyIsClose",
        "op_block_string":"OP_NODE_NUMPY_IS_CLOSE",
        "operation_title":"Is close",
        "operation_symbol":">=",
        "icon_filename":"approximately_equal_100",
        "input_socket_types":"(Number,Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"maths",
        "function":"floor_divide",
        "block_name":"NumpyFloorDivide",
        "op_block_string":"OP_NODE_NUMPY_FLOOR_DIVIDE",
        "operation_title":"Floor div.",
        "operation_symbol":"\/\/",
        "icon_filename":"floor_100",
        "input_socket_types":"(Number,Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"maths",
        "function":"absolute",
        "block_name":"NumpyAbsolute",
        "op_block_string":"OP_NODE_NUMPY_ABSOLUTE",
        "operation_title":"Abs. value",
        "operation_symbol":"",
        "icon_filename":"absolute_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"maths",
        "function":"reciprocal",
        "block_name":"NumpyReciprocal",
        "op_block_string":"OP_NODE_NUMPY_RECIPROCAL",
        "operation_title":"Reciprocal",
        "operation_symbol":"",
        "icon_filename":"reciprocal_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"maths",
        "function":"positive",
        "block_name":"NumpyPositive",
        "op_block_string":"OP_NODE_NUMPY_POSITIVE",
        "operation_title":"Pos. value",
        "operation_symbol":"",
        "icon_filename":"plus_math_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"maths",
        "function":"negative",
        "block_name":"NumpyNegative",
        "op_block_string":"OP_NODE_NUMPY_NEGATIVE",
        "operation_title":"Neg. value",
        "operation_symbol":"",
        "icon_filename":"subtract_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"maths",
        "function":"sqrt",
        "block_name":"NumpySqrt",
        "op_block_string":"OP_NODE_NUMPY_SQRT",
        "operation_title":"Square root",
        "operation_symbol":"",
        "icon_filename":"sqrt_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"maths",
        "function":"square",
        "block_name":"NumpySquare",
        "op_block_string":"OP_NODE_NUMPY_SQUARE",
        "operation_title":"Square",
        "operation_symbol":"",
        "icon_filename":"square_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"maths",
        "function":"sign",
        "block_name":"NumpySign",
        "op_block_string":"OP_NODE_NUMPY_SIGN",
        "operation_title":"Sign",
        "operation_symbol":"",
        "icon_filename":"sign_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"logics",
        "function":"maximum",
        "block_name":"NumpyMaximum",
        "op_block_string":"OP_NODE_NUMPY_MAX",
        "operation_title":"Maximum",
        "operation_symbol":"",
        "icon_filename":"max_100",
        "input_socket_types":"(Number, Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"logics",
        "function":"minimum",
        "block_name":"NumpyMinimum",
        "op_block_string":"OP_NODE_NUMPY_MIN",
        "operation_title":"Minimum",
        "operation_symbol":"",
        "icon_filename":"min_100",
        "input_socket_types":"(Number, Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"advanced_maths",
        "function":"exp",
        "block_name":"NumpyExp",
        "op_block_string":"OP_NODE_NUMPY_EXP",
        "operation_title":"Exponential",
        "operation_symbol":"",
        "icon_filename":"exp_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"advanced_maths",
        "function":"log",
        "block_name":"NumpyLog",
        "op_block_string":"OP_NODE_NUMPY_LOG",
        "operation_title":"Logarithm",
        "operation_symbol":"",
        "icon_filename":"log_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"advanced_maths",
        "function":"log2",
        "block_name":"NumpyLog2",
        "op_block_string":"OP_NODE_NUMPY_LOG2",
        "operation_title":"Logarithm 2",
        "operation_symbol":"",
        "icon_filename":"log2_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"advanced_maths",
        "function":"log10",
        "block_name":"NumpyLog10",
        "op_block_string":"OP_NODE_NUMPY_LOG10",
        "operation_title":"Logarithm 10",
        "operation_symbol":"",
        "icon_filename":"log10_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"advanced_maths",
        "function":"sin",
        "block_name":"NumpySin",
        "op_block_string":"OP_NODE_NUMPY_SIN",
        "operation_title":"Sine",
        "operation_symbol":"",
        "icon_filename":"sin_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"advanced_maths",
        "function":"cos",
        "block_name":"NumpyCos",
        "op_block_string":"OP_NODE_NUMPY_COS",
        "operation_title":"Cosine",
        "operation_symbol":"",
        "icon_filename":"cos_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"advanced_maths",
        "function":"tan",
        "block_name":"NumpyTan",
        "op_block_string":"OP_NODE_NUMPY_TAN",
        "operation_title":"Tangent",
        "operation_symbol":"",
        "icon_filename":"tan_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"advanced_maths",
        "function":"arcsin",
        "block_name":"NumpyArcsin",
        "op_block_string":"OP_NODE_NUMPY_ARCSIN",
        "operation_title":"Arcsine",
        "operation_symbol":"",
        "icon_filename":"arcsin_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"advanced_maths",
        "function":"arccos",
        "block_name":"NumpyArccos",
        "op_block_string":"OP_NODE_NUMPY_ARCCOS",
        "operation_title":"Arccosine",
        "operation_symbol":"",
        "icon_filename":"arccos_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"advanced_maths",
        "function":"arctan",
        "block_name":"NumpyArctan",
        "op_block_string":"OP_NODE_NUMPY_ARCTAN",
        "operation_title":"Arctangent",
        "operation_symbol":"",
        "icon_filename":"arctan_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"advanced_maths",
        "function":"arctan2",
        "block_name":"NumpyArctan2",
        "op_block_string":"OP_NODE_NUMPY_ARCTAN2",
        "operation_title":"Arctan2",
        "operation_symbol":"",
        "icon_filename":"arctan_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"advanced_maths",
        "function":"hypot",
        "block_name":"NumpyHypot",
        "op_block_string":"OP_NODE_NUMPY_HYPOT",
        "operation_title":"Hypotenuse",
        "operation_symbol":"",
        "icon_filename":"hypot_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"units",
        "function":"deg2rad",
        "block_name":"NumpyDeg2Rad",
        "op_block_string":"OP_NODE_NUMPY_DEG2RAD",
        "operation_title":"Deg to rad",
        "operation_symbol":"",
        "icon_filename":"deg2rad_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"units",
        "function":"rad2deg",
        "block_name":"NumpyRad2Deg",
        "op_block_string":"OP_NODE_NUMPY_RAD2DEG",
        "operation_title":"Rad to deg",
        "operation_symbol":"",
        "icon_filename":"rad2deg_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"advanced_maths",
        "function":"sinh",
        "block_name":"NumpySinh",
        "op_block_string":"OP_NODE_NUMPY_SINH",
        "operation_title":"Sinh",
        "operation_symbol":"",
        "icon_filename":"sinh_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"advanced_maths",
        "function":"cosh",
        "block_name":"NumpyCosh",
        "op_block_string":"OP_NODE_NUMPY_COSH",
        "operation_title":"Cosh",
        "operation_symbol":"",
        "icon_filename":"cosh_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"advanced_maths",
        "function":"tanh",
        "block_name":"NumpyTanh",
        "op_block_string":"OP_NODE_NUMPY_TANH",
        "operation_title":"Tanh",
        "operation_symbol":"",
        "icon_filename":"tanh_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"advanced_maths",
        "function":"arcsinh",
        "block_name":"NumpyArcsinh",
        "op_block_string":"OP_NODE_NUMPY_ARCSINH",
        "operation_title":"Arcsinh",
        "operation_symbol":"",
        "icon_filename":"arcsinh_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"advanced_maths",
        "function":"arccosh",
        "block_name":"NumpyArccosh",
        "op_block_string":"OP_NODE_NUMPY_ARCCOSH",
        "operation_title":"Arccosh",
        "operation_symbol":"",
        "icon_filename":"arccosh_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"advanced_maths",
        "function":"arctanh",
        "block_name":"NumpyArctanh",
        "op_block_string":"OP_NODE_NUMPY_ARCTANH",
        "operation_title":"Arctanh",
        "operation_symbol":"",
        "icon_filename":"arctanh_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"maths",
        "function":"around",
        "block_name":"NumpyAround",
        "op_block_string":"OP_NODE_NUMPY_AROUND",
        "operation_title":"Around",
        "operation_symbol":"",
        "icon_filename":"around_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"advanced_maths",
        "function":"rint",
        "block_name":"NumpyRint",
        "op_block_string":"OP_NODE_NUMPY_RINT",
        "operation_title":"Round integer",
        "operation_symbol":"",
        "icon_filename":"round_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"maths",
        "function":"ceil",
        "block_name":"NumpyCeil",
        "op_block_string":"OP_NODE_NUMPY_CEIL",
        "operation_title":"Ceiling",
        "operation_symbol":"",
        "icon_filename":"ceil_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    },
    {
        "library":"numpy",
        "library_title":"maths",
        "function":"trunc",
        "block_name":"NumpyTrunc",
        "op_block_string":"OP_NODE_NUMPY_TRUNC",
        "operation_title":"Truncation",
        "operation_symbol":"",
        "icon_filename":"trunc_100",
        "input_socket_types":"(Number)",
        "output_socket_types":"(Number)"
    }
]